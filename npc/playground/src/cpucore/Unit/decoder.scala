package cpucore.Unit

import chisel3._
import chisel3.util.experimental.decode.TruthTable
import chisel3.util.experimental.decode.decoder
import chisel3.util.BitPat

import cpucore.Unit.ALUOP._

object loongarch32r_inst{
    //I26
    def B         = BitPat("b010100_????????????????_??????????"    ) 
    def BL        = BitPat("b010101_????????????????_??????????"    )
    //2RI16 
    def JIRL      = BitPat("b010011_????????????????_?????_?????"   ) 
    def BEQ       = BitPat("b010110_????????????????_?????_?????"   ) 
    def BNE       = BitPat("b010111_????????????????_?????_?????"   ) 
    def BLT       = BitPat("b011000_????????????????_?????_?????"   ) 
    def BGE       = BitPat("b011001_????????????????_?????_?????"   ) 
    def BLTU      = BitPat("b011010_????????????????_?????_?????"   ) 
    def BGEU      = BitPat("b011011_????????????????_?????_?????"   )
    //1RI20 
    def LU12I_W   = BitPat("b0001010_?????_?????_?????_?????_?????" ) 
    def PCADDU12I = BitPat("b0001110_?????_?????_?????_?????_?????" )
    //2RI12
    def SLTI      = BitPat("b0000001000_????????????_?????_?????"   ) 
    def SLTUI     = BitPat("b0000001001_????????????_?????_?????"   ) 
    def ADDI_W    = BitPat("b0000001010_????????????_?????_?????"   ) 
    def ANDI      = BitPat("b0000001101_????????????_?????_?????"   ) 
    def ORI       = BitPat("b0000001110_????????????_?????_?????"   ) 
    def XORI      = BitPat("b0000001111_????????????_?????_?????"   ) 
    def LD_B      = BitPat("b0010100000_????????????_?????_?????"   ) 
    def LD_H      = BitPat("b0010100001_????????????_?????_?????"   ) 
    def LD_W      = BitPat("b0010100010_????????????_?????_?????"   ) 
    def ST_B      = BitPat("b0010100100_????????????_?????_?????"   ) 
    def ST_H      = BitPat("b0010100101_????????????_?????_?????"   ) 
    def ST_W      = BitPat("b0010100110_????????????_?????_?????"   ) 
    def LD_BU     = BitPat("b0010101000_????????????_?????_?????"   ) 
    def LD_HU     = BitPat("b0010101001_????????????_?????_?????"   )
    //3R 
    def ADD_W     = BitPat("b00000000000100000_?????_?????_?????"   ) 
    def SUB_W     = BitPat("b00000000000100010_?????_?????_?????"   ) 
    def SLT       = BitPat("b00000000000100100_?????_?????_?????"   ) 
    def SLTU      = BitPat("b00000000000100101_?????_?????_?????"   ) 
    def NOR       = BitPat("b00000000000101000_?????_?????_?????"   ) 
    def AND       = BitPat("b00000000000101001_?????_?????_?????"   ) 
    def MOVE      = BitPat("b00000000000101010_?????_?????_?????"   )
    def XOR       = BitPat("b00000000000101011_?????_?????_?????"   ) 
    def SLL_W     = BitPat("b00000000000101110_?????_?????_?????"   ) 
    def SRL_W     = BitPat("b00000000000101111_?????_?????_?????"   ) 
    def SRA_W     = BitPat("b00000000000110000_?????_?????_?????"   ) 
    def MUL_W     = BitPat("b00000000000111000_?????_?????_?????"   ) 
    def MULH_W    = BitPat("b00000000000111001_?????_?????_?????"   ) 
    def MULH_WU   = BitPat("b00000000000111010_?????_?????_?????"   ) 
    def DIV_W     = BitPat("b00000000001000000_?????_?????_?????"   ) 
    def MOD_W     = BitPat("b00000000001000001_?????_?????_?????"   ) 
    def DIV_WU    = BitPat("b00000000001000010_?????_?????_?????"   ) 
    def MOD_WU    = BitPat("b00000000001000011_?????_?????_?????"   ) 
    def SLLI_W    = BitPat("b00000000010000001_?????_?????_?????"   )//shift 
    def SRLI_W    = BitPat("b00000000010001001_?????_?????_?????"   )//shift
    def SRAI_W    = BitPat("b00000000010010001_?????_?????_?????"   ) 
    def BREAK     = BitPat("b0000_0000_0010_10100_?????_?????_?????") 

    def signal = BitPat("b")
    val inst_table = TruthTable(
        Map(
            B ->         BitPat("b_000000001"),
            BL ->        BitPat(""),
            JIRL ->      BitPat(""),
            BEQ ->       BitPat(""),
            BNE ->       BitPat(""),
            BLT ->       BitPat(),
            BGE ->       BitPat(),
            BLTU ->      BitPat(),
            BGEU ->      BitPat(),
            LU12I_W ->   BitPat(),
            PCADDU12I -> BitPat(),
            SLTI ->      BitPat(),
            SLTUI ->     BitPat(),
            ADDI_W ->    BitPat(),
            ANDI ->      BitPat(),
            ORI ->       BitPat(),
            XORI ->      BitPat(),
            LD_B ->      BitPat(),
            LD_H ->      BitPat(),
            LD_W ->      BitPat(),
            ST_B ->      BitPat(),
            ST_H ->      BitPat(),
            ST_W ->      BitPat(),
            LD_BU ->     BitPat(),
            LD_HU ->     BitPat(),
            ADD_W ->     BitPat(),
            SUB_W ->     BitPat(),
            SLT ->       BitPat(),
            SLTU ->      BitPat(),
            NOR ->       BitPat(),
            AND ->       BitPat(),
            MOVE ->      BitPat(),
            XOR ->       BitPat(),
            SLL_W ->     BitPat(),
            SRL_W ->     BitPat(),
            SRA_W ->     BitPat(),
            MUL_W ->     BitPat(),
            MULH_W ->    BitPat(),
            MULH_WU ->   BitPat(),
            DIV_W ->     BitPat(),
            MOD_W ->     BitPat(),
            DIV_WU ->    BitPat(),
            MOD_WU ->    BitPat(),
            SLLI_W ->    BitPat(),
            SRLI_W ->    BitPat(),
            SRAI_W ->    BitPat(),
            BREAK ->     BitPat()
         ),
         BitPat("b1")
     )
 
}